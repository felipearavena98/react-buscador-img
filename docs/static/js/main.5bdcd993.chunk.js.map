{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","photos","setPhotos","initialValues","search","cant","onSubmit","values","a","fetch","headers","response","json","data","results","name","placeholder","type","className","map","photo","onClick","url","links","html","window","open","src","urls","regular","description","alt_description","join","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAgDeA,EA1CH,WACV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACE,gCACE,iCACE,cAAC,IAAD,CACEC,cAAe,CAACC,OAAQ,GAAIC,KAAM,GAClCC,SAAQ,uCAAE,WAAMC,GAAN,iBAAAC,EAAA,sEAGeC,MAAM,mDAAD,OAAoDF,EAAOF,KAA3D,kBAAyEE,EAAOH,QAC5G,CAAEM,QAAQ,CACR,cAAiB,2DALX,cAGFC,EAHE,gBAQWA,EAASC,OARpB,OAQFC,EARE,OASRX,EAAUW,EAAKC,SATP,2CAAF,sDAFV,SAcE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,YAAY,qBACjC,cAAC,IAAD,CAAOD,KAAK,OAAOC,YAAY,iCAC/B,wBAAQC,KAAK,SAAb,2BAKN,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,SAAf,SACGjB,EAAOkB,KACN,SAAAC,GAAK,OAAI,0BAAwBC,QAAS,kBA7BvCC,EA6BkDF,EAAMG,MAAMC,KA7BvDC,OAAOC,KAAKJ,GAAnB,IAAAA,GA6BM,UACP,qBAAKK,IAAKP,EAAMQ,KAAKC,UACrB,4BAAI,CAACT,EAAMU,YAAaV,EAAMW,iBAAiBC,KAAK,WAF/BZ,EAAMa,eCzB1BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5bdcd993.chunk.js","sourcesContent":["import { Formik, Form, Field } from \"formik\";\nimport { useState } from \"react\";\nimport './header.css';\nimport './content.css';\nimport './article.css';\n\nconst App = () => {\n  const [photos, setPhotos] = useState([])\n  const open = url => window.open(url)\n  return (\n    <div>\n      <header>\n        <Formik\n          initialValues={{search: '', cant: 0}}\n          onSubmit={async values => {\n            //llarmar a api de unsplash\n            \n            const response = await fetch(`https://api.unsplash.com/search/photos?per_page=${values.cant}&query=${values.search}`, \n            { headers:{\n              'Authorization': 'Client-ID gFZmebR3Ia2JmiKDUgaS-NNzGlR9b-_0nif5DzelKOY'\n            }})\n\n            const data = await response.json()\n            setPhotos(data.results)\n          }}\n        >\n          <Form>\n            <Field name=\"search\" placeholder=\"Que desea buscar\" />\n            <Field name=\"cant\" placeholder=\"Indique cantidad de imagenes\" />\n            <button type=\"submit\">Buscar</button>\n          </Form>\n\n        </Formik>\n      </header>\n      <div className=\"container\">\n        <div className=\"center\">\n          {photos.map(\n            photo => <article key={photo.id} onClick={() => open(photo.links.html) } >\n              <img src={photo.urls.regular} />\n              <p>{[photo.description, photo.alt_description].join(' - ')}</p> \n            </article>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}